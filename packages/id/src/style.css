/* reset */

* {
  box-sizing: border-box;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
}

figure {
  margin: 0;
}

figcaption {
  font-size: 0.9rem;
}

/* client-specific */

/* header */

.header {
  display: grid;
  gap: 1rem;
  grid-template-columns: auto 1fr;
  grid-template-areas: "home nav";
}

.home > a {
  font-weight: 700;
}

.nav {
  display: flex;
  gap: 1rem;
  list-style: none;
  padding: 0;
  margin: 0;
}

/* footer */

.footer {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.social {
  display: flex;
  gap: 1rem;
  align-items: center;
  list-style: none;
  height: 1.5rem;
  margin: 0;
  padding: 0;
}

.social a {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.social svg {
  width: 1rem;
  height: 1rem;
}

/* drop cap */

.dropCap {
  float: left;
  font-size: 300%;
  color: #646cff;
  margin: -13px 7px -13px 0;
}

/* red text */

.redText {
  color: #ff4d4f;
}

/* about */

.dazn {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.dazn svg {
  fill: #fff;
}

.joyn {
  display: flex;
}

.joyn svg {
  margin: 10px 0 0 0;
}

.layout {
  display: grid;
  grid-template-rows: auto 1fr auto;
  row-gap: 3rem;
  min-height: 92vh;
}

/* 54rem is 50rem width + 2rem left padding + 2rem right padding */
@media screen and (min-width: 54rem) {
  .layout {
    grid-template-columns: 50rem;
  }
}

.head {
  display: grid;
  grid-template-areas: "image" "content";
  gap: 1.5rem;
}

@media screen and (min-width: 50rem) {
  .head {
    grid-template-areas: "content image";
    grid-template-columns: 1fr auto;
  }
}

.headText {
  display: grid;
  grid-area: content;
  gap: 0.25rem;
}

.meImageContainer {
  display: grid;
}

.meImage {
  height: 6rem;
  border-radius: 0.5rem;
  aspect-ratio: 1 / 1;
}

.main {
  display: grid;
  row-gap: 1rem;
}

main > header {
  display: grid;
  gap: 1rem;
}

.image {
  width: 100%;
  border-radius: 0.5rem;
  aspect-ratio: 16 / 9;
}

/* blog */

article {
  display: flex;
  gap: 1rem;
  padding: 0.5rem 0;
}

article:not(:last-child) {
  border-bottom: 1px #2c2c2c solid;
}

article > time {
  margin-left: auto;
  white-space: nowrap;
}

article .publisher {
  color: #888;
  font-size: 0.9rem;
  font-weight: 600;
}

.posts {
  display: grid;
}

/* projects & snippets */

article.project,
article.snippet {
  display: grid;
  padding: 0.5rem 0;
}

article.project > .row,
article.snippet > .row {
  display: grid;
  gap: 1rem;
  padding: 0.5rem 0;
  grid-template-columns: 1fr 1fr;
}

article.project > .row > time,
article.snippet > .row > time {
  margin-left: auto;
  white-space: nowrap;
}

/* enum converter */

.enum-input,
.enum-output {
  width: 100%;
  border-radius: 0.5rem;
  padding: 1rem 1.5rem;
  font-family: monospace;
  background-color: #1a1a1a;
  resize: vertical;
  border-width: 0;
}

.convert-enum-button {
  padding: 10px 20px;
  font-size: 16px;
  margin-top: 10px;
}

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

abbr {
  cursor: help;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

.linkExternal {
  white-space: nowrap;
  margin-left: 2px;
}

.linkExternal > svg > path,
.logo > svg > path {
  fill: #eee;
}

.logo:hover > svg > path {
  fill: #999;
}

body {
  margin: 0;
  display: flex;
  min-width: 320px;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

#app {
  max-width: 1280px;
  margin: 0 auto;
  padding: 4vh;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }

  a:hover {
    color: #747bff;
  }

  .linkExternal > svg > path,
  .logo > svg > path {
    fill: #111;
  }

  .logo:hover > svg > path {
    fill: #8a8a8a;
  }

  article:not(:last-child) {
    border-bottom: 1px #eee solid;
  }

  .dazn svg {
    fill: #000;
  }

  .enum-input,
  .enum-output {
    background-color: #f2f2f2;
  }
}
