name: CI

on: push

jobs:
  install:
    name: Install
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache files
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.5.0

      - name: Install
        run: pnpm install

  type-check:
    name: Type check
    needs: [install]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Type check
        run: pnpm --filter blog2 run type

  test:
    name: Tests
    needs: [install]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [blog2]
    steps:
      - name: Unit tests
        run: pnpm --filter ${{ matrix.package }} run test:unit

  build:
    name: Build blog
    needs: [install]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [blog2]
    steps:
      - name: Build
        run: pnpm --filter ${{ matrix.package }} run build

  size:
    name: Bundle size
    needs: [build]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [blog2]
    steps:
      - name: Build
        run: pnpm --filter ${{ matrix.package }} run size
        env:
          BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}

